// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface ISSVNetwork$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "ISSVNetwork",
  "sourceName": "contracts/interfaces/ISSVNetwork.sol",
  "abi": [
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "contract ISSVOperators",
          "name": "ssvOperators_",
          "type": "address"
        },
        {
          "internalType": "contract ISSVClusters",
          "name": "ssvClusters_",
          "type": "address"
        },
        {
          "internalType": "contract ISSVDAO",
          "name": "ssvDAO_",
          "type": "address"
        },
        {
          "internalType": "contract ISSVViews",
          "name": "ssvViews_",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "minimumBlocksBeforeLiquidation_",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "minimumLiquidationCollateral_",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "validatorsPerOperatorLimit_",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "declareOperatorFeePeriod_",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "executeOperatorFeePeriod_",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "operatorMaxFeeIncrease_",
          "type": "uint64"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeRecipientAddress",
          "type": "address"
        }
      ],
      "name": "setFeeRecipientAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum SSVModules",
          "name": "moduleId",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "moduleAddress",
          "type": "address"
        }
      ],
      "name": "updateModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "ISSVNetwork",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ISSVNetwork$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<ISSVNetwork$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "ISSVNetwork",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ISSVNetwork$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<ISSVNetwork$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "ISSVNetwork",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ISSVNetwork$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<ISSVNetwork$Type["abi"]>>;
}
