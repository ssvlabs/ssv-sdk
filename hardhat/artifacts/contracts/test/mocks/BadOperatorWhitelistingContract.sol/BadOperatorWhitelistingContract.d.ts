// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface BadOperatorWhitelistingContract$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "BadOperatorWhitelistingContract",
  "sourceName": "contracts/test/mocks/BadOperatorWhitelistingContract.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract BeneficiaryContract",
          "name": "_beneficiaryContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561000f575f80fd5b5060405161031138038061031183398101604081905261002e91610052565b5f80546001600160a01b0319166001600160a01b039290921691909117905561007f565b5f60208284031215610062575f80fd5b81516001600160a01b0381168114610078575f80fd5b9392505050565b6102858061008c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806301ffc9a714610102575b5f61003436826101c1565b90507f7cf9c654000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610100575f546040517f42e3318400000000000000000000000000000000000000000000000000000000815262989680600482015273ffffffffffffffffffffffffffffffffffffffff909116906342e33184906024015f604051808303815f87803b1580156100e9575f80fd5b505af11580156100fb573d5f803e3d5ffd5b505050505b005b610115610110366004610209565b610129565b604051901515815260200160405180910390f35b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f830639ac0000000000000000000000000000000000000000000000000000000014806101bb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156102015780818660040360031b1b83161692505b505092915050565b5f60208284031215610219575f80fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610248575f80fd5b939250505056fea2646970667358221220124e038d0db7150a623c70d8c9e9b9da931643e182d73ddeb71af9a4dcfc629f64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610029575f3560e01c806301ffc9a714610102575b5f61003436826101c1565b90507f7cf9c654000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821601610100575f546040517f42e3318400000000000000000000000000000000000000000000000000000000815262989680600482015273ffffffffffffffffffffffffffffffffffffffff909116906342e33184906024015f604051808303815f87803b1580156100e9575f80fd5b505af11580156100fb573d5f803e3d5ffd5b505050505b005b610115610110366004610209565b610129565b604051901515815260200160405180910390f35b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f830639ac0000000000000000000000000000000000000000000000000000000014806101bb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156102015780818660040360031b1b83161692505b505092915050565b5f60208284031215610219575f80fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610248575f80fd5b939250505056fea2646970667358221220124e038d0db7150a623c70d8c9e9b9da931643e182d73ddeb71af9a4dcfc629f64736f6c63430008180033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "BadOperatorWhitelistingContract",
    constructorArgs: [_beneficiaryContract: AbiParameterToPrimitiveType<{"name":"_beneficiaryContract","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<BadOperatorWhitelistingContract$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract",
    constructorArgs: [_beneficiaryContract: AbiParameterToPrimitiveType<{"name":"_beneficiaryContract","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<BadOperatorWhitelistingContract$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "BadOperatorWhitelistingContract",
    constructorArgs: [_beneficiaryContract: AbiParameterToPrimitiveType<{"name":"_beneficiaryContract","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<BadOperatorWhitelistingContract$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract",
    constructorArgs: [_beneficiaryContract: AbiParameterToPrimitiveType<{"name":"_beneficiaryContract","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<BadOperatorWhitelistingContract$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "BadOperatorWhitelistingContract",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<BadOperatorWhitelistingContract$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<BadOperatorWhitelistingContract$Type["abi"]>>;
}
