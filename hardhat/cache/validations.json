{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "8bf077f6374631bd1a682f1ff9b11149374007f73a931b90d78c7d67a170bde8",
          "withoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302",
          "linkedWithoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "24168bf5f4640c46e3c9c25ac4918adf410768d13cbd0b0e59651af560a32d6e",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "bcf0995915ad2360a96e48b5973279fe212b728210530b2f7479fbd00282d7c0",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4950",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4950": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVProxy.sol:SSVProxy": {
        "src": "contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "985cf16d5a9d6e87a714b00dbcf3c9a1a95ca607b86b667081ad110ab89f8dec",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "4ebd83c58bb676540151ececc60f6ce0b47ca5c67078c86410ff981e3441ca96",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "139f1f45223ce50f05bc313a7480fce3516d7c94bc61569cda7078d5659337e8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "0699b2d3a11d7a2bb048dbd0eac89f3119df7cf032f6a66f7e233e6b3cb69836",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "4e5aafd73a28bddad9324a9aeca4201982890e95441cef277aaad8c8764a74dd",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "acaf9eab7ce9d0e94fa94d2ca9985bb7a1852c5131417cc1141cc329f03db6b7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types256": {
        "src": "contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "2775616915d5c974f1758c02ec4c3f8d47b893fc0ec48222f6c997aa12fab3e9",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types64": {
        "src": "contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "aa50d1a375f361927d174306aa50e387eb22e59bec2e80176c5b1088da837032",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "d7a9698a88fdaeb188e2a8e60614bfc98bbf8618819f3f0c10e4db926a78ecc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "9c0a0ebb9f6677b4e60e1b2dab16f04703016d142acba1089c4f4e99c97b0596",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "03675dd786b57b82ad5988ca918e29b62094b49b5c69ff2369e9b84052e86847",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "83f9c888b67df8507a022a1250bc1f1aed6ca3b92a41fc4f5bb0d6931c498215",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "7cbdd22bbae3298142c8f3850113dda0934a8fdbfb72a5754905222328998c7a",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVViews.sol:SSVViews": {
        "src": "contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "83b4ca1e1f99c429a58c1c6881fbe525b259430d02a3e9acbffdf02f2bb4ff63",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "ae62dbfc46a411a5adafa1e6fcd9602ec2d7467855b566eec2696340d704972e",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "ec06642bb50664d8b0cc62d9fa9b3d3283c68750d4b7c3126115cb2a426c3a39",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "7eb3c15579fa8fb78d6d81d6281b6128a4824db0d7ea37bc9edaa266296e04ab",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "37f1ddb2ccff407953b39b04f7d08f0d89064bc5a780d6c8e309c4bacac09c1f",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "030d74c32b251244e0935df7b73a4f2bd2fd3d60e8b8def07e104722fba5c67c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "9f459a8b3b50433a77f83075d996be664103c473bad67021faf97fecbef905ed",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "c2badeb7ca99e1e2feb3458f19e770fe6d5b8ca52c2291865e5387e359f212c7",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "b412a7688d80f7b0355f9e548ae6da102f333aa669d8ca87dd969abd1e2dc6d9",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)12174",
              "contract": "BadOperatorWhitelistingContract",
              "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)12174": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "5e047eedef6169302ef3aeffa646a0c65ab47af828ecfc0034973cc5eb30a7c0",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4663",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4663": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "17f65ffa985b2718e1520e4a00bdf7e0d9d8b520365e6edcf838ec6c8ef2d49a",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)12192_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)12192_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "d50fd799b861a25458b2ec039e1ae43cb77fe2da4851e0fecf327deac460e08f",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)4194",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)2180",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)2180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)4194": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "31dd1c36b051d0ac26bc3508bc1eb9e3b494e3749007115e5c91a34168fc62c8",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "a1f85fdb2641a35bafa80ed5bdbc01c34accb94dc3c9e04cf5e9fcd5f38a7420",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "062c65e45629ebb1cee0c687bfb426b2fe659b663f82af7dd96450bdc2b1c6ad",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "999ee0301a5ad7acd785ef7c8a785a7eab4260dcd8bc4b21eca9c817e77a0bb3",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "f4865869b6deb944af4f511dbef88098a2618a53017be16d72cb24a929ea6dfb",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "8bf077f6374631bd1a682f1ff9b11149374007f73a931b90d78c7d67a170bde8",
          "withoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302",
          "linkedWithoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "24168bf5f4640c46e3c9c25ac4918adf410768d13cbd0b0e59651af560a32d6e",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "bcf0995915ad2360a96e48b5973279fe212b728210530b2f7479fbd00282d7c0",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4950",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4950": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVProxy.sol:SSVProxy": {
        "src": "contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "985cf16d5a9d6e87a714b00dbcf3c9a1a95ca607b86b667081ad110ab89f8dec",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "4ebd83c58bb676540151ececc60f6ce0b47ca5c67078c86410ff981e3441ca96",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "139f1f45223ce50f05bc313a7480fce3516d7c94bc61569cda7078d5659337e8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "0699b2d3a11d7a2bb048dbd0eac89f3119df7cf032f6a66f7e233e6b3cb69836",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "4e5aafd73a28bddad9324a9aeca4201982890e95441cef277aaad8c8764a74dd",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "acaf9eab7ce9d0e94fa94d2ca9985bb7a1852c5131417cc1141cc329f03db6b7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types256": {
        "src": "contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "2775616915d5c974f1758c02ec4c3f8d47b893fc0ec48222f6c997aa12fab3e9",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types64": {
        "src": "contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "aa50d1a375f361927d174306aa50e387eb22e59bec2e80176c5b1088da837032",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "d7a9698a88fdaeb188e2a8e60614bfc98bbf8618819f3f0c10e4db926a78ecc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "9c0a0ebb9f6677b4e60e1b2dab16f04703016d142acba1089c4f4e99c97b0596",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "03675dd786b57b82ad5988ca918e29b62094b49b5c69ff2369e9b84052e86847",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "83f9c888b67df8507a022a1250bc1f1aed6ca3b92a41fc4f5bb0d6931c498215",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "7cbdd22bbae3298142c8f3850113dda0934a8fdbfb72a5754905222328998c7a",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVViews.sol:SSVViews": {
        "src": "contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "83b4ca1e1f99c429a58c1c6881fbe525b259430d02a3e9acbffdf02f2bb4ff63",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "ae62dbfc46a411a5adafa1e6fcd9602ec2d7467855b566eec2696340d704972e",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "ec06642bb50664d8b0cc62d9fa9b3d3283c68750d4b7c3126115cb2a426c3a39",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "7eb3c15579fa8fb78d6d81d6281b6128a4824db0d7ea37bc9edaa266296e04ab",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "37f1ddb2ccff407953b39b04f7d08f0d89064bc5a780d6c8e309c4bacac09c1f",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "030d74c32b251244e0935df7b73a4f2bd2fd3d60e8b8def07e104722fba5c67c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "9f459a8b3b50433a77f83075d996be664103c473bad67021faf97fecbef905ed",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "c2badeb7ca99e1e2feb3458f19e770fe6d5b8ca52c2291865e5387e359f212c7",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "b412a7688d80f7b0355f9e548ae6da102f333aa669d8ca87dd969abd1e2dc6d9",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)12174",
              "contract": "BadOperatorWhitelistingContract",
              "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)12174": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "5e047eedef6169302ef3aeffa646a0c65ab47af828ecfc0034973cc5eb30a7c0",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4663",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4663": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "17f65ffa985b2718e1520e4a00bdf7e0d9d8b520365e6edcf838ec6c8ef2d49a",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)12192_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)12192_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "d50fd799b861a25458b2ec039e1ae43cb77fe2da4851e0fecf327deac460e08f",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)4194",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)2180",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)2180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)4194": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "31dd1c36b051d0ac26bc3508bc1eb9e3b494e3749007115e5c91a34168fc62c8",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "a1f85fdb2641a35bafa80ed5bdbc01c34accb94dc3c9e04cf5e9fcd5f38a7420",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "062c65e45629ebb1cee0c687bfb426b2fe659b663f82af7dd96450bdc2b1c6ad",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "999ee0301a5ad7acd785ef7c8a785a7eab4260dcd8bc4b21eca9c817e77a0bb3",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "f4865869b6deb944af4f511dbef88098a2618a53017be16d72cb24a929ea6dfb",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/token/SSVToken.sol:SSVToken": {
        "src": "contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "179a6718ab5fb0f4344eaedffb3e47ae47a1f76ed9336b9b44ecf911c3ac40ab",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/token/SSVToken.sol:SSVToken": {
        "src": "contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "179a6718ab5fb0f4344eaedffb3e47ae47a1f76ed9336b9b44ecf911c3ac40ab",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "e3adffffeccc4bd83063652f1f496a365ec09292b14d3e2a30bdf7044a242a20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "e3adffffeccc4bd83063652f1f496a365ec09292b14d3e2a30bdf7044a242a20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "8bf077f6374631bd1a682f1ff9b11149374007f73a931b90d78c7d67a170bde8",
          "withoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302",
          "linkedWithoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "24168bf5f4640c46e3c9c25ac4918adf410768d13cbd0b0e59651af560a32d6e",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "bcf0995915ad2360a96e48b5973279fe212b728210530b2f7479fbd00282d7c0",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4950",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4950": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVProxy.sol:SSVProxy": {
        "src": "contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "985cf16d5a9d6e87a714b00dbcf3c9a1a95ca607b86b667081ad110ab89f8dec",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "4ebd83c58bb676540151ececc60f6ce0b47ca5c67078c86410ff981e3441ca96",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "139f1f45223ce50f05bc313a7480fce3516d7c94bc61569cda7078d5659337e8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "0699b2d3a11d7a2bb048dbd0eac89f3119df7cf032f6a66f7e233e6b3cb69836",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "4e5aafd73a28bddad9324a9aeca4201982890e95441cef277aaad8c8764a74dd",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "acaf9eab7ce9d0e94fa94d2ca9985bb7a1852c5131417cc1141cc329f03db6b7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types256": {
        "src": "contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "2775616915d5c974f1758c02ec4c3f8d47b893fc0ec48222f6c997aa12fab3e9",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types64": {
        "src": "contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "aa50d1a375f361927d174306aa50e387eb22e59bec2e80176c5b1088da837032",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "d7a9698a88fdaeb188e2a8e60614bfc98bbf8618819f3f0c10e4db926a78ecc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "9c0a0ebb9f6677b4e60e1b2dab16f04703016d142acba1089c4f4e99c97b0596",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "03675dd786b57b82ad5988ca918e29b62094b49b5c69ff2369e9b84052e86847",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "83f9c888b67df8507a022a1250bc1f1aed6ca3b92a41fc4f5bb0d6931c498215",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "7cbdd22bbae3298142c8f3850113dda0934a8fdbfb72a5754905222328998c7a",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVViews.sol:SSVViews": {
        "src": "contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "83b4ca1e1f99c429a58c1c6881fbe525b259430d02a3e9acbffdf02f2bb4ff63",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "ae62dbfc46a411a5adafa1e6fcd9602ec2d7467855b566eec2696340d704972e",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "ec06642bb50664d8b0cc62d9fa9b3d3283c68750d4b7c3126115cb2a426c3a39",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "7eb3c15579fa8fb78d6d81d6281b6128a4824db0d7ea37bc9edaa266296e04ab",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "37f1ddb2ccff407953b39b04f7d08f0d89064bc5a780d6c8e309c4bacac09c1f",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "030d74c32b251244e0935df7b73a4f2bd2fd3d60e8b8def07e104722fba5c67c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "9f459a8b3b50433a77f83075d996be664103c473bad67021faf97fecbef905ed",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "c2badeb7ca99e1e2feb3458f19e770fe6d5b8ca52c2291865e5387e359f212c7",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "b412a7688d80f7b0355f9e548ae6da102f333aa669d8ca87dd969abd1e2dc6d9",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)12174",
              "contract": "BadOperatorWhitelistingContract",
              "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)12174": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "5e047eedef6169302ef3aeffa646a0c65ab47af828ecfc0034973cc5eb30a7c0",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4663",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4663": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "17f65ffa985b2718e1520e4a00bdf7e0d9d8b520365e6edcf838ec6c8ef2d49a",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)12192_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)12192_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "d50fd799b861a25458b2ec039e1ae43cb77fe2da4851e0fecf327deac460e08f",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)4194",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)2180",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)2180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)4194": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "31dd1c36b051d0ac26bc3508bc1eb9e3b494e3749007115e5c91a34168fc62c8",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "a1f85fdb2641a35bafa80ed5bdbc01c34accb94dc3c9e04cf5e9fcd5f38a7420",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "062c65e45629ebb1cee0c687bfb426b2fe659b663f82af7dd96450bdc2b1c6ad",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "999ee0301a5ad7acd785ef7c8a785a7eab4260dcd8bc4b21eca9c817e77a0bb3",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "f4865869b6deb944af4f511dbef88098a2618a53017be16d72cb24a929ea6dfb",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "8bf077f6374631bd1a682f1ff9b11149374007f73a931b90d78c7d67a170bde8",
          "withoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302",
          "linkedWithoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "24168bf5f4640c46e3c9c25ac4918adf410768d13cbd0b0e59651af560a32d6e",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "bcf0995915ad2360a96e48b5973279fe212b728210530b2f7479fbd00282d7c0",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4950",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4950": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVProxy.sol:SSVProxy": {
        "src": "contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "985cf16d5a9d6e87a714b00dbcf3c9a1a95ca607b86b667081ad110ab89f8dec",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "4ebd83c58bb676540151ececc60f6ce0b47ca5c67078c86410ff981e3441ca96",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "139f1f45223ce50f05bc313a7480fce3516d7c94bc61569cda7078d5659337e8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "0699b2d3a11d7a2bb048dbd0eac89f3119df7cf032f6a66f7e233e6b3cb69836",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "4e5aafd73a28bddad9324a9aeca4201982890e95441cef277aaad8c8764a74dd",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "acaf9eab7ce9d0e94fa94d2ca9985bb7a1852c5131417cc1141cc329f03db6b7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types256": {
        "src": "contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "2775616915d5c974f1758c02ec4c3f8d47b893fc0ec48222f6c997aa12fab3e9",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types64": {
        "src": "contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "aa50d1a375f361927d174306aa50e387eb22e59bec2e80176c5b1088da837032",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "d7a9698a88fdaeb188e2a8e60614bfc98bbf8618819f3f0c10e4db926a78ecc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "9c0a0ebb9f6677b4e60e1b2dab16f04703016d142acba1089c4f4e99c97b0596",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "03675dd786b57b82ad5988ca918e29b62094b49b5c69ff2369e9b84052e86847",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "83f9c888b67df8507a022a1250bc1f1aed6ca3b92a41fc4f5bb0d6931c498215",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "7cbdd22bbae3298142c8f3850113dda0934a8fdbfb72a5754905222328998c7a",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVViews.sol:SSVViews": {
        "src": "contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "83b4ca1e1f99c429a58c1c6881fbe525b259430d02a3e9acbffdf02f2bb4ff63",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "ae62dbfc46a411a5adafa1e6fcd9602ec2d7467855b566eec2696340d704972e",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "ec06642bb50664d8b0cc62d9fa9b3d3283c68750d4b7c3126115cb2a426c3a39",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "7eb3c15579fa8fb78d6d81d6281b6128a4824db0d7ea37bc9edaa266296e04ab",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "37f1ddb2ccff407953b39b04f7d08f0d89064bc5a780d6c8e309c4bacac09c1f",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "030d74c32b251244e0935df7b73a4f2bd2fd3d60e8b8def07e104722fba5c67c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "9f459a8b3b50433a77f83075d996be664103c473bad67021faf97fecbef905ed",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "c2badeb7ca99e1e2feb3458f19e770fe6d5b8ca52c2291865e5387e359f212c7",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "b412a7688d80f7b0355f9e548ae6da102f333aa669d8ca87dd969abd1e2dc6d9",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)12174",
              "contract": "BadOperatorWhitelistingContract",
              "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)12174": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "5e047eedef6169302ef3aeffa646a0c65ab47af828ecfc0034973cc5eb30a7c0",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4663",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4663": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "17f65ffa985b2718e1520e4a00bdf7e0d9d8b520365e6edcf838ec6c8ef2d49a",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)12192_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)12192_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "d50fd799b861a25458b2ec039e1ae43cb77fe2da4851e0fecf327deac460e08f",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)4194",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)2180",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)2180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)4194": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "31dd1c36b051d0ac26bc3508bc1eb9e3b494e3749007115e5c91a34168fc62c8",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "a1f85fdb2641a35bafa80ed5bdbc01c34accb94dc3c9e04cf5e9fcd5f38a7420",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "062c65e45629ebb1cee0c687bfb426b2fe659b663f82af7dd96450bdc2b1c6ad",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "999ee0301a5ad7acd785ef7c8a785a7eab4260dcd8bc4b21eca9c817e77a0bb3",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "f4865869b6deb944af4f511dbef88098a2618a53017be16d72cb24a929ea6dfb",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/token/SSVToken.sol:SSVToken": {
        "src": "contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "179a6718ab5fb0f4344eaedffb3e47ae47a1f76ed9336b9b44ecf911c3ac40ab",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/token/SSVToken.sol:SSVToken": {
        "src": "contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "179a6718ab5fb0f4344eaedffb3e47ae47a1f76ed9336b9b44ecf911c3ac40ab",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "e3adffffeccc4bd83063652f1f496a365ec09292b14d3e2a30bdf7044a242a20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "e3adffffeccc4bd83063652f1f496a365ec09292b14d3e2a30bdf7044a242a20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "8bf077f6374631bd1a682f1ff9b11149374007f73a931b90d78c7d67a170bde8",
          "withoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302",
          "linkedWithoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "24168bf5f4640c46e3c9c25ac4918adf410768d13cbd0b0e59651af560a32d6e",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "bcf0995915ad2360a96e48b5973279fe212b728210530b2f7479fbd00282d7c0",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4950",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4950": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVProxy.sol:SSVProxy": {
        "src": "contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "985cf16d5a9d6e87a714b00dbcf3c9a1a95ca607b86b667081ad110ab89f8dec",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "4ebd83c58bb676540151ececc60f6ce0b47ca5c67078c86410ff981e3441ca96",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "139f1f45223ce50f05bc313a7480fce3516d7c94bc61569cda7078d5659337e8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "0699b2d3a11d7a2bb048dbd0eac89f3119df7cf032f6a66f7e233e6b3cb69836",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "4e5aafd73a28bddad9324a9aeca4201982890e95441cef277aaad8c8764a74dd",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "acaf9eab7ce9d0e94fa94d2ca9985bb7a1852c5131417cc1141cc329f03db6b7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types256": {
        "src": "contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "2775616915d5c974f1758c02ec4c3f8d47b893fc0ec48222f6c997aa12fab3e9",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types64": {
        "src": "contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "aa50d1a375f361927d174306aa50e387eb22e59bec2e80176c5b1088da837032",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "d7a9698a88fdaeb188e2a8e60614bfc98bbf8618819f3f0c10e4db926a78ecc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "9c0a0ebb9f6677b4e60e1b2dab16f04703016d142acba1089c4f4e99c97b0596",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "03675dd786b57b82ad5988ca918e29b62094b49b5c69ff2369e9b84052e86847",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "83f9c888b67df8507a022a1250bc1f1aed6ca3b92a41fc4f5bb0d6931c498215",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "7cbdd22bbae3298142c8f3850113dda0934a8fdbfb72a5754905222328998c7a",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVViews.sol:SSVViews": {
        "src": "contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "83b4ca1e1f99c429a58c1c6881fbe525b259430d02a3e9acbffdf02f2bb4ff63",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "ae62dbfc46a411a5adafa1e6fcd9602ec2d7467855b566eec2696340d704972e",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "ec06642bb50664d8b0cc62d9fa9b3d3283c68750d4b7c3126115cb2a426c3a39",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "7eb3c15579fa8fb78d6d81d6281b6128a4824db0d7ea37bc9edaa266296e04ab",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "37f1ddb2ccff407953b39b04f7d08f0d89064bc5a780d6c8e309c4bacac09c1f",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "030d74c32b251244e0935df7b73a4f2bd2fd3d60e8b8def07e104722fba5c67c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "9f459a8b3b50433a77f83075d996be664103c473bad67021faf97fecbef905ed",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "c2badeb7ca99e1e2feb3458f19e770fe6d5b8ca52c2291865e5387e359f212c7",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "b412a7688d80f7b0355f9e548ae6da102f333aa669d8ca87dd969abd1e2dc6d9",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)12174",
              "contract": "BadOperatorWhitelistingContract",
              "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)12174": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "5e047eedef6169302ef3aeffa646a0c65ab47af828ecfc0034973cc5eb30a7c0",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4663",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4663": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "17f65ffa985b2718e1520e4a00bdf7e0d9d8b520365e6edcf838ec6c8ef2d49a",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)12192_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)12192_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "d50fd799b861a25458b2ec039e1ae43cb77fe2da4851e0fecf327deac460e08f",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)4194",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)2180",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)2180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)4194": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "31dd1c36b051d0ac26bc3508bc1eb9e3b494e3749007115e5c91a34168fc62c8",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "a1f85fdb2641a35bafa80ed5bdbc01c34accb94dc3c9e04cf5e9fcd5f38a7420",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "062c65e45629ebb1cee0c687bfb426b2fe659b663f82af7dd96450bdc2b1c6ad",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "999ee0301a5ad7acd785ef7c8a785a7eab4260dcd8bc4b21eca9c817e77a0bb3",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "f4865869b6deb944af4f511dbef88098a2618a53017be16d72cb24a929ea6dfb",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "e3adffffeccc4bd83063652f1f496a365ec09292b14d3e2a30bdf7044a242a20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/token/SSVToken.sol:SSVToken": {
        "src": "contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "179a6718ab5fb0f4344eaedffb3e47ae47a1f76ed9336b9b44ecf911c3ac40ab",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "24168bf5f4640c46e3c9c25ac4918adf410768d13cbd0b0e59651af560a32d6e",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "bcf0995915ad2360a96e48b5973279fe212b728210530b2f7479fbd00282d7c0",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4294",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4294": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SSVProxy.sol:SSVProxy": {
        "src": "contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "985cf16d5a9d6e87a714b00dbcf3c9a1a95ca607b86b667081ad110ab89f8dec",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "4ebd83c58bb676540151ececc60f6ce0b47ca5c67078c86410ff981e3441ca96",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "139f1f45223ce50f05bc313a7480fce3516d7c94bc61569cda7078d5659337e8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "0699b2d3a11d7a2bb048dbd0eac89f3119df7cf032f6a66f7e233e6b3cb69836",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "4e5aafd73a28bddad9324a9aeca4201982890e95441cef277aaad8c8764a74dd",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "acaf9eab7ce9d0e94fa94d2ca9985bb7a1852c5131417cc1141cc329f03db6b7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types256": {
        "src": "contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "2775616915d5c974f1758c02ec4c3f8d47b893fc0ec48222f6c997aa12fab3e9",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/Types.sol:Types64": {
        "src": "contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "aa50d1a375f361927d174306aa50e387eb22e59bec2e80176c5b1088da837032",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "d7a9698a88fdaeb188e2a8e60614bfc98bbf8618819f3f0c10e4db926a78ecc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "9c0a0ebb9f6677b4e60e1b2dab16f04703016d142acba1089c4f4e99c97b0596",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "03675dd786b57b82ad5988ca918e29b62094b49b5c69ff2369e9b84052e86847",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "83f9c888b67df8507a022a1250bc1f1aed6ca3b92a41fc4f5bb0d6931c498215",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "7cbdd22bbae3298142c8f3850113dda0934a8fdbfb72a5754905222328998c7a",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/modules/SSVViews.sol:SSVViews": {
        "src": "contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "83b4ca1e1f99c429a58c1c6881fbe525b259430d02a3e9acbffdf02f2bb4ff63",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "contracts/interfaces/ISSVViews.sol:ISSVViews",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types64",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "ae62dbfc46a411a5adafa1e6fcd9602ec2d7467855b566eec2696340d704972e",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "ec06642bb50664d8b0cc62d9fa9b3d3283c68750d4b7c3126115cb2a426c3a39",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "7eb3c15579fa8fb78d6d81d6281b6128a4824db0d7ea37bc9edaa266296e04ab",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/ClusterLib.sol:ClusterLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "37f1ddb2ccff407953b39b04f7d08f0d89064bc5a780d6c8e309c4bacac09c1f",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "030d74c32b251244e0935df7b73a4f2bd2fd3d60e8b8def07e104722fba5c67c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "9f459a8b3b50433a77f83075d996be664103c473bad67021faf97fecbef905ed",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "c2badeb7ca99e1e2feb3458f19e770fe6d5b8ca52c2291865e5387e359f212c7",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "b412a7688d80f7b0355f9e548ae6da102f333aa669d8ca87dd969abd1e2dc6d9",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)11518",
              "contract": "BadOperatorWhitelistingContract",
              "src": "contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)11518": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "5e047eedef6169302ef3aeffa646a0c65ab47af828ecfc0034973cc5eb30a7c0",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4007",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4007": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "17f65ffa985b2718e1520e4a00bdf7e0d9d8b520365e6edcf838ec6c8ef2d49a",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)11536_storage",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)11536_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "d50fd799b861a25458b2ec039e1ae43cb77fe2da4851e0fecf327deac460e08f",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)3538",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)1593",
              "contract": "GenericWhitelistContract",
              "src": "contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)1593": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)3538": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "31dd1c36b051d0ac26bc3508bc1eb9e3b494e3749007115e5c91a34168fc62c8",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "a1f85fdb2641a35bafa80ed5bdbc01c34accb94dc3c9e04cf5e9fcd5f38a7420",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "contracts/libraries/Types.sol:Types256",
          "contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "contracts/libraries/OperatorLib.sol:OperatorLib",
          "contracts/libraries/SSVStorage.sol:SSVStorage",
          "contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "062c65e45629ebb1cee0c687bfb426b2fe659b663f82af7dd96450bdc2b1c6ad",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "999ee0301a5ad7acd785ef7c8a785a7eab4260dcd8bc4b21eca9c817e77a0bb3",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "contracts/SSVNetwork.sol:SSVNetwork",
          "contracts/SSVProxy.sol:SSVProxy",
          "contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "f4865869b6deb944af4f511dbef88098a2618a53017be16d72cb24a929ea6dfb",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/token/SSVToken.sol:SSVToken": {
        "src": "contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "179a6718ab5fb0f4344eaedffb3e47ae47a1f76ed9336b9b44ecf911c3ac40ab",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "e3adffffeccc4bd83063652f1f496a365ec09292b14d3e2a30bdf7044a242a20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "ffb8bc5e94b4a8cde6613f4c760e42d6b4e3359a759209f8a50d56f9f1b0d581",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "eb89286927dba4bf5701b3ff749e339a564857851bfcd135a65c29ca05c14617",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "8bf077f6374631bd1a682f1ff9b11149374007f73a931b90d78c7d67a170bde8",
          "withoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302",
          "linkedWithoutMetadata": "ae451f07d0e3450df4483ae640a203ace1f1f8a4a8558a84e019fcea741e5302"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "5bbb4114958c337f7469a2a3924543b36ab86346491e027abbc8eabc4f05119c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "27034a248f897f17c124f67d0a40202a21d2dae45d44d0042b9c4cc2dd9a321f",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/SSVNetwork.sol:SSVNetwork": {
        "src": "hardhat\\contracts\\SSVNetwork.sol:27",
        "version": {
          "withMetadata": "77e2751e93f831cc27bc5e351f2155b5562443c495e919244b1a37a9c817cf4b",
          "withoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751",
          "linkedWithoutMetadata": "350f8e1c7a01c817bb83103cd78dcb1d0b3510b15601eff2bea87d6506ccd751"
        },
        "inherit": [
          "hardhat/contracts/SSVProxy.sol:SSVProxy",
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "removeOperatorsWhitelistingContract(uint64[])",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setFeeRecipientAddress(address)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "getVersion()",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/SSVNetworkViews.sol:SSVNetworkViews": {
        "src": "hardhat\\contracts\\SSVNetworkViews.sol:13",
        "version": {
          "withMetadata": "58b0c50dfe0bcffe39f98130da13b5764b11a8cbecebcf740245c3a0e6c43735",
          "withoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1",
          "linkedWithoutMetadata": "da06f711e239a6b927747cdeefb5954a754f3a4e01a17212488672f6689ac6f1"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVViews.sol:ISSVViews",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/Types.sol:Types64",
          "hardhat/contracts/libraries/ClusterLib.sol:ClusterLib",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            },
            {
              "label": "ssvNetwork",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(ISSVViews)4950",
              "contract": "SSVNetworkViews",
              "src": "hardhat\\contracts\\SSVNetworkViews.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "SSVNetworkViews",
              "src": "hardhat\\contracts\\SSVNetworkViews.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISSVViews)4950": {
              "label": "contract ISSVViews",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/SSVProxy.sol:SSVProxy": {
        "src": "hardhat\\contracts\\SSVProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "hardhat\\contracts\\interfaces\\ISSVClusters.sol:6",
        "inherit": [
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "hardhat\\contracts\\interfaces\\ISSVDAO.sol:6",
        "inherit": [
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "hardhat\\contracts\\interfaces\\ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "hardhat\\contracts\\interfaces\\ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "hardhat\\contracts\\interfaces\\ISSVOperators.sol:6",
        "inherit": [
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist": {
        "src": "hardhat\\contracts\\interfaces\\ISSVOperatorsWhitelist.sol:7",
        "inherit": [
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "hardhat\\contracts\\interfaces\\ISSVViews.sol:6",
        "inherit": [
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract": {
        "src": "hardhat\\contracts\\interfaces\\external\\ISSVWhitelistingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isWhitelisted(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/ClusterLib.sol:ClusterLib": {
        "src": "hardhat\\contracts\\libraries\\ClusterLib.sol:11",
        "version": {
          "withMetadata": "3ac00b12ee3e0ef0a396b3ac6137e203e7d8ac0faba58489de95547f191d0da8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types64",
          "hardhat/contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/CoreLib.sol:CoreLib": {
        "src": "hardhat\\contracts\\libraries\\CoreLib.sol:6",
        "version": {
          "withMetadata": "a9331e4244942aa220847a2efeac6c514f39ae267986bdc4c80468f112d42209",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib": {
        "src": "hardhat\\contracts\\libraries\\OperatorLib.sol:12",
        "version": {
          "withMetadata": "0c3e4e9bc7fba623d5c74422c655bae7dcbdc6eba16f9966787de4cfac121104",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/ProtocolLib.sol:ProtocolLib": {
        "src": "hardhat\\contracts\\libraries\\ProtocolLib.sol:8",
        "version": {
          "withMetadata": "a48f0fbcccc751d4a1780204b3363df53d59545b1b599578d24424b0e12faa8b",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "hardhat\\contracts\\libraries\\SSVStorage.sol:43",
        "version": {
          "withMetadata": "3a84548111cd9db587b39ce13b7c9f5598e5dda406e6811829a1993cb5e49a5c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol": {
        "src": "hardhat\\contracts\\libraries\\SSVStorageProtocol.sol:35",
        "version": {
          "withMetadata": "d5fd824dea727494042fbcfaf03bcc0dff682039b6bc7a52866fa82fb653ba17",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/Types.sol:Types256": {
        "src": "hardhat\\contracts\\libraries\\Types.sol:12",
        "version": {
          "withMetadata": "5fcfd219d795904b49145aeba46b17146d4768b8137fa2ffdd4ff7522c2740e0",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/Types.sol:Types64": {
        "src": "hardhat\\contracts\\libraries\\Types.sol:6",
        "version": {
          "withMetadata": "5f78308b86f3a7a573b97a11e63861c0195163ff991e54d357c38ec22d057732",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/libraries/ValidatorLib.sol:ValidatorLib": {
        "src": "hardhat\\contracts\\libraries\\ValidatorLib.sol:7",
        "version": {
          "withMetadata": "54177846a11be64ca99c5b25101f45a5929b2c85b02eec01f4df580178b3a285",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/modules/SSVClusters.sol:SSVClusters": {
        "src": "hardhat\\contracts\\modules\\SSVClusters.sol:13",
        "version": {
          "withMetadata": "646ae7c10df6a7a7605dc328d55e15dfa1b0738c5caa452a4da6d3f614dbefca",
          "withoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d",
          "linkedWithoutMetadata": "567ccd602b92a9a4a533efebcd2c3a5725eea19d2cb332bbb42729b3ff83ea0d"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "hardhat/contracts/libraries/ClusterLib.sol:ClusterLib",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib",
          "hardhat/contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "hardhat/contracts/libraries/ValidatorLib.sol:ValidatorLib",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/modules/SSVDAO.sol:SSVDAO": {
        "src": "hardhat\\contracts\\modules\\SSVDAO.sol:10",
        "version": {
          "withMetadata": "92bc60ae2c1835942ce116bcc2e603069beacb1a72198c7fd840c407fc595b67",
          "withoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f",
          "linkedWithoutMetadata": "8136ad099d74ba950cf8041b1fa601ae0efc9301385c665d60aaea59ae83121f"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types64",
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/modules/SSVOperators.sol:SSVOperators": {
        "src": "hardhat\\contracts\\modules\\SSVOperators.sol:13",
        "version": {
          "withMetadata": "df874c09f89e52fd32f6703ebe7d50c491e1890c09f8a0fd13aa09e23dbf2620",
          "withoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6",
          "linkedWithoutMetadata": "d5050d61a86de65c21b0f6966e862011d492a1c212d06e3e6b1dbf85b83f77d6"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/modules/SSVOperatorsWhitelist.sol:SSVOperatorsWhitelist": {
        "src": "hardhat\\contracts\\modules\\SSVOperatorsWhitelist.sol:10",
        "version": {
          "withMetadata": "8fe2b862f90f8020f43fd5c163e3bdcd5c8ec97b532d8d5867187a82f3179ee9",
          "withoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f",
          "linkedWithoutMetadata": "15fa007fbe7900eb0ebf1ba6766f8a82c215160d771ef9e9343861f6775cf26f"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/Types.sol:Types64",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [
          "setOperatorsWhitelists(uint64[],address[])",
          "removeOperatorsWhitelists(uint64[],address[])",
          "setOperatorsWhitelistingContract(uint64[],address)",
          "removeOperatorsWhitelistingContract(uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/modules/SSVViews.sol:SSVViews": {
        "src": "hardhat\\contracts\\modules\\SSVViews.sol:14",
        "version": {
          "withMetadata": "d93d87135c2fc90ebb1eda7bf9b3585c029806b2915ef021e1662a1dae9e4186",
          "withoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9",
          "linkedWithoutMetadata": "9c9e5f10496ac9ac5c824c79a6019ef211e1ced31ea98d26c4e64a07db0474c9"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVViews.sol:ISSVViews",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types64",
          "hardhat/contracts/libraries/ClusterLib.sol:ClusterLib",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib",
          "hardhat/contracts/libraries/ProtocolLib.sol:ProtocolLib",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "getWhitelistedOperators(uint64[],address)",
          "isWhitelistingContract(address)",
          "isAddressWhitelistedInWhitelistingContract(address,uint256,address)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getNetworkValidatorsCount()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/SSVNetworkBasicUpgrade.sol:SSVNetworkBasicUpgrade": {
        "src": "hardhat\\contracts\\test\\SSVNetworkBasicUpgrade.sol:6",
        "version": {
          "withMetadata": "42a0c57e3eae921614b9b36a3ded96016cccf6026087b2262821f9096ef490d0",
          "withoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077",
          "linkedWithoutMetadata": "15d1bd8052766a4e879f111036d811cd8eb49be035c8f94052867742324a5077"
        },
        "inherit": [
          "hardhat/contracts/SSVNetwork.sol:SSVNetwork",
          "hardhat/contracts/SSVProxy.sol:SSVProxy",
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "resetNetworkFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/SSVNetworkReinitializable.sol:SSVNetworkReinitializable": {
        "src": "hardhat\\contracts\\test\\SSVNetworkReinitializable.sol:7",
        "version": {
          "withMetadata": "2a4c053d73f41007b5ee2fb063db26b36e5ab8130f463033398951ad28c5f97e",
          "withoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657",
          "linkedWithoutMetadata": "f18c2346226508cec2b5df4a9fdf34e1f6b28273ed62040b6e7ba8b3ed3b0657"
        },
        "inherit": [
          "hardhat/contracts/SSVNetwork.sol:SSVNetwork",
          "hardhat/contracts/SSVProxy.sol:SSVProxy",
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/test/libraries/SSVStorageT.sol:SSVStorageT"
        ],
        "methods": [
          "initializeV2(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/SSVNetworkUpgrade.sol:SSVNetworkUpgrade": {
        "src": "hardhat\\contracts\\test\\SSVNetworkUpgrade.sol:24",
        "version": {
          "withMetadata": "ab8353333e296107144125f0103f5aa7c6ed6781f27ba6e37ec88b9509dc3814",
          "withoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f",
          "linkedWithoutMetadata": "c38038b521d001ba22ee2cd5ebe0d07ee08eeaf9133a622cb83281273e75177f"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/ClusterLib.sol:ClusterLib",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage",
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "()",
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setFeeRecipientAddress(address)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)",
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "bulkRegisterValidator(bytes[],uint64[],bytes[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "bulkRemoveValidator(bytes[],uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])",
          "bulkExitValidator(bytes[],uint64[])",
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperatorUpgrade": {
        "src": "hardhat\\contracts\\test\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "29da2f7ad39640c4f559dfc09cab518ea527e632e9271b094c48a79e277c4063",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "hardhat/contracts/SSVNetwork.sol:SSVNetwork",
          "hardhat/contracts/SSVProxy.sol:SSVProxy",
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/interfaces/ISSVNetworkT.sol:ISSVNetworkT": {
        "src": "hardhat\\contracts\\test\\interfaces\\ISSVNetworkT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "setFeeRecipientAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/libraries/CoreLibT.sol:CoreLibT": {
        "src": "hardhat\\contracts\\test\\libraries\\CoreLibT.sol:6",
        "version": {
          "withMetadata": "2f79d5039a4b2558c094b810a3368168b93fc9e5d790821f85b550d5d68facc1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/libraries/SSVStorageT.sol:SSVStorageT": {
        "src": "hardhat\\contracts\\test\\libraries\\SSVStorageT.sol:16",
        "version": {
          "withMetadata": "e1b9cb74d6d1511cd8c5b459fab944e7203d8db8c02694e89ac7672c7fa34058",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "hardhat/contracts/libraries/Types.sol:Types64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/mocks/AttackerWhitelistingContract.sol:AttackerContract": {
        "src": "hardhat\\contracts\\test\\mocks\\AttackerWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "9ad3a7dfccbb37605a7a5e5a002a1ba16985df907544809f5090b6e9fe603a1b",
          "withoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9",
          "linkedWithoutMetadata": "410db8a165d8a054e677a22ff4903e33634b9165c3919efb5ae387dd61bcf4d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "startAttack(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AttackerContract",
            "src": "hardhat\\contracts\\test\\mocks\\AttackerWhitelistingContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AttackerContract",
              "src": "hardhat\\contracts\\test\\mocks\\AttackerWhitelistingContract.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/mocks/BadOperatorWhitelistingContract.sol:BadOperatorWhitelistingContract": {
        "src": "hardhat\\contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:11",
        "version": {
          "withMetadata": "05994389f4cd9aceaec0a64ea57ae28dc0a636b8cb908c643e09a901af4a9f1e",
          "withoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1",
          "linkedWithoutMetadata": "60776511e0b8a11dba9ef4d195d68c48c585e198e704721b6e3136723980b7e1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadOperatorWhitelistingContract",
            "src": "hardhat\\contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaryContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(BeneficiaryContract)12174",
              "contract": "BadOperatorWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\BadOperatorWhitelistingContract.sol:12"
            }
          ],
          "types": {
            "t_contract(BeneficiaryContract)12174": {
              "label": "contract BeneficiaryContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/mocks/BeneficiaryContract.sol:BeneficiaryContract": {
        "src": "hardhat\\contracts\\test\\mocks\\BeneficiaryContract.sol:8",
        "version": {
          "withMetadata": "cb7a48cda5716542585cdb3aa046c7f460f74045cc0952827ad2ba540763418d",
          "withoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93",
          "linkedWithoutMetadata": "4baca987ebee3a04d90a4c0fd4d6224bbd81f33e1f0153b28bdf504b30fa0a93"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setTargetOperatorId(uint64)",
          "withdrawOperatorEarnings(uint256)",
          "registerOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeneficiaryContract",
            "src": "hardhat\\contracts\\test\\mocks\\BeneficiaryContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVOperators)4663",
              "contract": "BeneficiaryContract",
              "src": "hardhat\\contracts\\test\\mocks\\BeneficiaryContract.sol:9"
            },
            {
              "label": "targetOperatorId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "BeneficiaryContract",
              "src": "hardhat\\contracts\\test\\mocks\\BeneficiaryContract.sol:10"
            }
          ],
          "types": {
            "t_contract(ISSVOperators)4663": {
              "label": "contract ISSVOperators",
              "numberOfBytes": "20"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/mocks/FakeWhitelistingContract.sol:FakeWhitelistingContract": {
        "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:9",
        "version": {
          "withMetadata": "553c830f640fef6da036226ffbceacdd057170891dbee29eb1a08074e71382bf",
          "withoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558",
          "linkedWithoutMetadata": "560cda3eb45c77eec078e781b3ced13b535158179a4fc82d7a74d63f80942558"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRegisterValidatorData(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FakeWhitelistingContract",
            "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:18"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "FakeWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:19"
            },
            {
              "label": "sharesData",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes_storage",
              "contract": "FakeWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:20"
            },
            {
              "label": "amount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FakeWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:21"
            },
            {
              "label": "clusterData",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(Cluster)12192_storage",
              "contract": "FakeWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:22"
            },
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "FakeWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\FakeWhitelistingContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_struct(Cluster)12192_storage": {
              "label": "struct FakeWhitelistingContract.Cluster",
              "members": [
                {
                  "label": "validatorCount",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "networkFeeIndex",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/mocks/GenericWhitelistContract.sol:GenericWhitelistContract": {
        "src": "hardhat\\contracts\\test\\mocks\\GenericWhitelistContract.sol:8",
        "version": {
          "withMetadata": "1fc044a566a75d6bf49b7cccf46babd10f557a5fd3e6758cda1aa1a7222e40cc",
          "withoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2",
          "linkedWithoutMetadata": "479f2f6ff4025e79e7571dd1e9926f27b470a0969fe14bea7279245d03fc85c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "registerValidatorSSV(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenericWhitelistContract",
            "src": "hardhat\\contracts\\test\\mocks\\GenericWhitelistContract.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ssvContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISSVClusters)4194",
              "contract": "GenericWhitelistContract",
              "src": "hardhat\\contracts\\test\\mocks\\GenericWhitelistContract.sol:9"
            },
            {
              "label": "ssvToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)2180",
              "contract": "GenericWhitelistContract",
              "src": "hardhat\\contracts\\test\\mocks\\GenericWhitelistContract.sol:10"
            }
          ],
          "types": {
            "t_contract(IERC20)2180": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ISSVClusters)4194": {
              "label": "contract ISSVClusters",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/mocks/MockWhitelistingContract.sol:MockWhitelistingContract": {
        "src": "hardhat\\contracts\\test\\mocks\\MockWhitelistingContract.sol:7",
        "version": {
          "withMetadata": "22949d99e7454cf5c52e5f00b3928a302aec44800f46de152c103b9f777b6466",
          "withoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6",
          "linkedWithoutMetadata": "48d8f428cad6388a5d91c0f357595accfd0d0b29119fc19d694e56cdc70725d6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "hardhat/contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "(address[])",
          "setWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockWhitelistingContract",
            "src": "hardhat\\contracts\\test\\mocks\\MockWhitelistingContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MockWhitelistingContract",
              "src": "hardhat\\contracts\\test\\mocks\\MockWhitelistingContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/test/modules/SSVOperatorsUpdate.sol:SSVOperatorsUpdate": {
        "src": "hardhat\\contracts\\test\\modules\\SSVOperatorsUpdate.sol:13",
        "version": {
          "withMetadata": "d49c83622e1a3ea3d05960876dc3b507d49380379601b6c55a096c88c6607bde",
          "withoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539",
          "linkedWithoutMetadata": "27d62427e859454a6b5c26cac7ab03ace8846c4a578680553d7297d2f37f2539"
        },
        "inherit": [
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [
          "hardhat/contracts/libraries/Types.sol:Types256",
          "hardhat/contracts/libraries/Types.sol:Types64",
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "hardhat/contracts/libraries/OperatorLib.sol:OperatorLib",
          "hardhat/contracts/libraries/SSVStorage.sol:SSVStorage",
          "hardhat/contracts/libraries/CoreLib.sol:CoreLib"
        ],
        "methods": [
          "registerOperator(bytes,uint256,bool)",
          "removeOperator(uint64)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "setOperatorsPrivateUnchecked(uint64[])",
          "setOperatorsPublicUnchecked(uint64[])",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/upgrades/stage/goerli/SSVNetworkValidatorsPerOperator.sol:SSVNetworkValidatorsPerOperator": {
        "src": "hardhat\\contracts\\upgrades\\stage\\goerli\\SSVNetworkValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "84a9ea5872c1ae42cdd15a2f6c2197461c2d95cc4b8f5a3200c0d39af56014d6",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "hardhat/contracts/SSVNetwork.sol:SSVNetwork",
          "hardhat/contracts/SSVProxy.sol:SSVProxy",
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/upgrades/stage/holesky/SSVNetworkUpgradeValidatorsPerOperator.sol:SSVNetworkUpgradeValidatorsPerOperator": {
        "src": "hardhat\\contracts\\upgrades\\stage\\holesky\\SSVNetworkUpgradeValidatorsPerOperator.sol:6",
        "version": {
          "withMetadata": "30f2cb8c38c1d14520c174a593a4f6e094cd0caaa7fc9c8cae12f38f0ee02fac",
          "withoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df",
          "linkedWithoutMetadata": "fafb0b1d8e00713964218572f49834194aceb152684068d1d9920dbca67bb1df"
        },
        "inherit": [
          "hardhat/contracts/SSVNetwork.sol:SSVNetwork",
          "hardhat/contracts/SSVProxy.sol:SSVProxy",
          "hardhat/contracts/interfaces/ISSVDAO.sol:ISSVDAO",
          "hardhat/contracts/interfaces/ISSVClusters.sol:ISSVClusters",
          "hardhat/contracts/interfaces/ISSVOperatorsWhitelist.sol:ISSVOperatorsWhitelist",
          "hardhat/contracts/interfaces/ISSVOperators.sol:ISSVOperators",
          "hardhat/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore",
          "hardhat/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "hardhat/contracts/libraries/SSVStorageProtocol.sol:SSVStorageProtocol"
        ],
        "methods": [
          "initializev2(uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "Ownable2StepUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\Ownable2StepUpgradeable.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "hardhat/contracts/whitelisting/BasicWhitelisting.sol:BasicWhitelisting": {
        "src": "hardhat\\contracts\\whitelisting\\BasicWhitelisting.sol:8",
        "version": {
          "withMetadata": "b8c473171b8ac35d2e728ef8b34320d7bb17319f2e5407d40e7ed6065795a81e",
          "withoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982",
          "linkedWithoutMetadata": "810ea0838f133c819f658cd7345b7691c985677081a90f4f71144c75bc389982"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "hardhat/contracts/interfaces/external/ISSVWhitelistingContract.sol:ISSVWhitelistingContract"
        ],
        "libraries": [],
        "methods": [
          "addWhitelistedAddress(address)",
          "removeWhitelistedAddress(address)",
          "isWhitelisted(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "whitelisted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BasicWhitelisting",
              "src": "hardhat\\contracts\\whitelisting\\BasicWhitelisting.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/contracts/token/SSVToken.sol:SSVToken": {
        "src": "hardhat\\contracts\\token\\SSVToken.sol:11",
        "version": {
          "withMetadata": "67108474030d6e5ae70ef747439f66fbda6f540fc4e7a16434616dcae29b1e76",
          "withoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5",
          "linkedWithoutMetadata": "435b8557cc454c838271d296fc0412327d6e49bcae1d22edd45ccb54b21567d5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SSVToken",
            "src": "hardhat\\contracts\\token\\SSVToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "hardhat/contracts/deprecated/RegisterAuth.sol:RegisterAuth": {
        "src": "hardhat\\contracts\\deprecated\\RegisterAuth.sol:11",
        "version": {
          "withMetadata": "a8bc409797c41670dcc9a32e86fd6d3af93359ebbd4745da19b87bd8b8d01bae",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}